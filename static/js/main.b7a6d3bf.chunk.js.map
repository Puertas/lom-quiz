{"version":3,"sources":["components/Quiz/Quiz.module.css","components/Feedback/FeedbackIcon/FeedbackIcon.module.css","components/QuestionInput/QuestionInputSelect/QuestionInputSelect.module.css","components/QuestionInput/QuestionInputText/QuestionInputText.module.css","components/Feedback/WorthinessReport/WorthinessReport.module.css","App.module.css","components/QuestionInput/QuestionInputRadioGroup/QuestionInputRadioGroup.module.css","components/Question/Question.module.css","components/Feedback/FeedbackAnswer/FeedbackAnswer.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Logo/Logo.module.css","data/questions.ts","Utils/Utils.ts","components/Question/Question.tsx","components/Feedback/FeedbackAnswer/FeedbackAnswer.tsx","components/UI/Icons/Check.tsx","components/UI/Icons/Cross.tsx","components/UI/Icons/ThumbsUp.tsx","components/UI/Icons/ThumbsDown.tsx","components/Feedback/FeedbackIcon/FeedbackIcon.tsx","components/QuestionInput/QuestionInputRadioGroup/QuestionInputRadioGroup.tsx","components/QuestionInput/QuestionInputSelect/QuestionInputSelect.tsx","components/QuestionInput/QuestionInputText/QuestionInputText.tsx","components/UI/Backdrop/Backdrop.tsx","components/UI/Modal/Modal.tsx","components/Feedback/WorthinessReport/WorthinessReport.tsx","components/Quiz/Quiz.tsx","assets/images/lom-logo.svg","components/UI/Logo/Logo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","QuestionTypeModel","questionsPool","id","text","type","Radio","choices","value","correct","Text","Select","shuffleArray","array","shuffledArray","i","length","j","Math","floor","random","temp","getQuizQuestions","questions","slice","question","Question","order","className","classes","FeedbackAnswer","correctAnswer","Feedback","Check","size","xmlns","width","height","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","Cross","ThumbsUp","ThumbsDown","FeedbackIcon","iconClasses","Correct","Wrong","QuestionInputRadioGroup","name","userAnswer","onChangeHandler","answered","correctAnswerValue","find","choice","map","disabled","onChange","target","htmlFor","Incorrect","QuestionInputSelect","selectClasses","validationSection","defaultValue","QuestionInputText","inputClasses","Input","Backdrop","show","onClickHandler","onClick","Modal","onModalClose","children","style","transform","opacity","WorthinessReport","score","onClose","worthy","worthinessSection","Worthy","Unworthy","Quiz","useState","setQuestions","activeQuestion","setActiveQuestion","userAnswers","setUserAnswers","setAnswered","showResult","setShowResult","inputValueRef","useRef","scoreValueRef","attemptValueRef","questionsNumber","useEffect","correctAnswers","reduce","acc","current","saveUserQuestion","answer","prevAnswers","toLowerCase","handleInputChange","hideResult","inputRadioGroup","inputSelect","buttonSection","QuestionsContainer","QuestionContainer","ActiveQuestion","InputContainer","Footer","Logo","src","lomLogo","alt","App","Header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7a6d3bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__3Brri\",\"QuestionsContainer\":\"Quiz_QuestionsContainer__Z3zCB\",\"QuestionContainer\":\"Quiz_QuestionContainer__dwOjU\",\"ActiveQuestion\":\"Quiz_ActiveQuestion__VhRfI\",\"InputContainer\":\"Quiz_InputContainer__1bcUE\",\"Footer\":\"Quiz_Footer__3xWWq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackIcon\":\"FeedbackIcon_FeedbackIcon__68NJ8\",\"Correct\":\"FeedbackIcon_Correct__1URAH\",\"Wrong\":\"FeedbackIcon_Wrong__2XCqd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"QuestionInputSelect_Select__3xmow\",\"Correct\":\"QuestionInputSelect_Correct__2U1ry\",\"Incorrect\":\"QuestionInputSelect_Incorrect__ItIiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"QuestionInputText_Input__16pkc\",\"Correct\":\"QuestionInputText_Correct__34bWn\",\"Incorrect\":\"QuestionInputText_Incorrect__2LqkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorthinessReport\":\"WorthinessReport_WorthinessReport__1WZua\",\"Worthy\":\"WorthinessReport_Worthy__2iRUr\",\"Unworthy\":\"WorthinessReport_Unworthy__3fxUc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Header\":\"App_Header__ZS1m2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Correct\":\"QuestionInputRadioGroup_Correct__2Mbt5\",\"Incorrect\":\"QuestionInputRadioGroup_Incorrect__lPXDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"Question_Text__Ewr0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback\":\"FeedbackAnswer_Feedback__1EjBL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3ME4O\"};","export interface QuestionModel {\n  id: string\n  text: string\n  type: QuestionTypeModel\n  choices?: ChoiceModel[]\n  correct: string\n}\n\nexport enum QuestionTypeModel {\n  Text = 'text',\n  Radio = 'radio',\n  Select = 'select',\n}\n\nexport interface ChoiceModel {\n  id: string\n  value: string\n}\n\nexport const questionsPool: QuestionModel[] = [\n  {\n    id: 'q1',\n    text: 'In \"The Matrix\" movie, which pill did Neo choose to stay in Wonderland?',\n    type: QuestionTypeModel.Radio,\n    choices: [\n      { id: 'q1_1', value: 'red' },\n      { id: 'q1_2', value: 'blue' },\n    ],\n    correct: 'q1_1',\n  },\n  {\n    id: 'q2',\n    text: 'From \"Mario Bros.\" video games, What Is Mario And Luigi’s last name?',\n    type: QuestionTypeModel.Text,\n    correct: 'mario',\n  },\n  {\n    id: 'q3',\n    text: 'Where do Sherlock Holmes live?',\n    type: QuestionTypeModel.Select,\n    choices: [\n      { id: 'q3_1', value: '22b, Maker Street' },\n      { id: 'q3_2', value: '2b, Maker Street' },\n      { id: 'q3_3', value: '212b, Baker Street' },\n      { id: 'q3_4', value: '221b, Baker Street' },\n    ],\n    correct: 'q3_4',\n  },\n  {\n    id: 'q4',\n    text: 'How many mainline Nintendo Legend of Zelda games feature \"Link\" in the title?',\n    type: QuestionTypeModel.Select,\n    choices: [\n      { id: 'q4_1', value: '3' },\n      { id: 'q4_2', value: '4' },\n      { id: 'q4_3', value: '5' },\n      { id: 'q4_4', value: '6' },\n    ],\n    correct: 'q4_2',\n  },\n  {\n    id: 'q5',\n    text: 'What is Gandalf’s name in Sindarin, used in Gondor and by the Elves?',\n    type: QuestionTypeModel.Text,\n    correct: 'mithrandir',\n  },\n  {\n    id: 'q6',\n    text: 'What is the name of the computer in \"2001: A Space Odyssey\"?',\n    type: QuestionTypeModel.Text,\n    correct: 'hal',\n  },\n  {\n    id: 'q7',\n    text: 'From \"Bloodborne\" video game, finish the Willem quote \"We are born of the blood, made men by the blood, undone by the blood. Our eyes are yet to open. ...\"',\n    type: QuestionTypeModel.Select,\n    choices: [\n      { id: 'q7_1', value: 'Bless the Healing Church.' },\n      { id: 'q7_2', value: 'Long life to Ludwig.' },\n      { id: 'q7_3', value: 'Fear the old blood.' },\n    ],\n    correct: 'q7_3',\n  },\n  {\n    id: 'q8',\n    text: 'From \"Dark Souls\" video game, Artorias is also known as...',\n    type: QuestionTypeModel.Select,\n    choices: [\n      { id: 'q8_1', value: 'The Abysswalker' },\n      { id: 'q8_2', value: 'The Chosen One' },\n      { id: 'q8_3', value: 'The Lord of Cinder' },\n    ],\n    correct: 'q8_1',\n  },\n  {\n    id: 'q9',\n    text: 'What is the name of the computer in \"WarGames\" movie?',\n    type: QuestionTypeModel.Radio,\n    choices: [\n      { id: 'q9_1', value: 'wopr' },\n      { id: 'q9_2', value: 'norad' },\n    ],\n    correct: 'q9_1',\n  },\n  {\n    id: 'q10',\n    text: 'According with \"Terminator 2\" movie, When \"Skynet\" becomes self-aware and starts a nuclear strike (J-Day)?',\n    type: QuestionTypeModel.Radio,\n    choices: [\n      { id: 'q10_1', value: 'August 29, 1996' },\n      { id: 'q10_2', value: 'August 01, 1997' },\n      { id: 'q10_3', value: 'August 29, 1997' },\n      { id: 'q10_4', value: 'August 01, 1996' },\n    ],\n    correct: 'q10_3',\n  },\n  {\n    id: 'q11',\n    text: 'According with \"D&D\" rules, What is the only way to permanently kill a troll??',\n    type: QuestionTypeModel.Radio,\n    choices: [\n      { id: 'q11_1', value: 'Trick it into staying out in the sun' },\n      { id: 'q11_2', value: 'Finish it off with fire or acid' },\n      { id: 'q11_3', value: 'Cast \"Remove Curse\"' },\n    ],\n    correct: 'q11_2',\n  },\n  {\n    id: 'q12',\n    text: 'On \"Warcraft\" video games, What is the name of the Arthas’s horse?',\n    type: QuestionTypeModel.Select,\n    choices: [\n      { id: 'q12_1', value: 'Invencible' },\n      { id: 'q12_2', value: 'Steadfast' },\n      { id: 'q12_3', value: 'Courageous' },\n    ],\n    correct: 'q12_1',\n  },\n  {\n    id: 'q13',\n    text: 'From \"Game Of Thrones\", What is the meaning of \"Valar Morghulis\"?',\n    type: QuestionTypeModel.Select,\n    choices: [\n      { id: 'q13_1', value: 'All men must die' },\n      { id: 'q13_2', value: 'All men must serve' },\n    ],\n    correct: 'q13_1',\n  },\n  {\n    id: 'q14',\n    text: '1011000 = ...?',\n    type: QuestionTypeModel.Radio,\n    choices: [\n      { id: 'q14_1', value: '78' },\n      { id: 'q14_2', value: '80' },\n      { id: 'q14_3', value: '70' },\n      { id: 'q14_4', value: '88' },\n    ],\n    correct: 'q14_4',\n  },\n  {\n    id: 'q15',\n    text: 'How many keys has 60% keyboard with ANSI layout?',\n    type: QuestionTypeModel.Radio,\n    choices: [\n      { id: 'q15_1', value: '68' },\n      { id: 'q15_2', value: '61' },\n      { id: 'q15_3', value: '62' },\n      { id: 'q15_4', value: '69' },\n    ],\n    correct: 'q15_2',\n  },\n]\n","import { QuestionModel } from '../data/questions'\nimport { questionsPool } from '../data/questions'\n\nexport function shuffleArray(array: any[]): any[] {\n  const shuffledArray = [...array]\n\n  for (var i = shuffledArray.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1))\n    var temp = shuffledArray[i]\n    shuffledArray[i] = shuffledArray[j]\n    shuffledArray[j] = temp\n  }\n\n  return shuffledArray\n}\n\nexport function getQuizQuestions(): QuestionModel[] {\n  const questions: QuestionModel[] = shuffleArray(questionsPool).slice(0, 10)\n\n  for (const question of questions) {\n    if (question.choices) {\n      question.choices = shuffleArray(question.choices)\n    }\n  }\n\n  return questions\n}\n","import React from 'react'\n\nimport classes from './Question.module.css'\n\ninterface QuestionProps {\n  text: string\n  order: number\n}\n\nconst Question = ({ text, order }: QuestionProps) => {\n  return (\n    <div>\n      <span className={classes.Text}>\n        {order}. {text}\n      </span>\n    </div>\n  )\n}\n\nexport default Question\n","import React from 'react'\n\nimport classes from './FeedbackAnswer.module.css'\n\ninterface FeedbackAnswerProps {\n  correctAnswer: string\n  text?: string\n}\n\nconst FeedbackAnswer = ({\n  correctAnswer,\n  text = 'Correct:',\n}: FeedbackAnswerProps) => (\n  <div className={classes.Feedback}>\n    <span>\n      {text} {correctAnswer}\n    </span>\n  </div>\n)\n\nexport default FeedbackAnswer\n","import React from 'react'\n\nimport { IconPros } from '.'\n\nexport const Check = ({ size = '24' }: IconPros) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={size}\n    height={size}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    strokeWidth=\"2\"\n    className=\"feather feather-check\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M20 6L9 17 4 12\"></path>\n  </svg>\n)\n","import React from 'react'\n\nimport { IconPros } from '.'\n\nexport const Cross = ({ size = '24' }: IconPros) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={size}\n    height={size}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    strokeWidth=\"2\"\n    className=\"feather feather-x\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M18 6L6 18\"></path>\n    <path d=\"M6 6L18 18\"></path>\n  </svg>\n)\n","import React from 'react'\n\nimport { IconPros } from '.'\n\nexport const ThumbsUp = ({ size = '24' }: IconPros) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={size}\n    height={size}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    strokeWidth=\"2\"\n    className=\"feather feather-thumbs-up\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M14 9V5a3 3 0 00-3-3l-4 9v11h11.28a2 2 0 002-1.7l1.38-9a2 2 0 00-2-2.3zM7 22H4a2 2 0 01-2-2v-7a2 2 0 012-2h3\"></path>\n  </svg>\n)\n","import React from 'react'\n\nimport { IconPros } from '.'\n\nexport const ThumbsDown = ({ size = '24' }: IconPros) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={size}\n    height={size}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    strokeWidth=\"2\"\n    className=\"feather feather-thumbs-down\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M10 15v4a3 3 0 003 3l4-9V2H5.72a2 2 0 00-2 1.7l-1.38 9a2 2 0 002 2.3zm7-13h2.67A2.31 2.31 0 0122 4v7a2.31 2.31 0 01-2.33 2H17\"></path>\n  </svg>\n)\n","import React from 'react'\nimport { Check, Cross } from '../../UI/Icons'\n\nimport classes from './FeedbackIcon.module.css'\n\ninterface FeedbackIconProps {\n  correct: Boolean\n}\n\nconst FeedbackIcon = ({ correct }: FeedbackIconProps) => {\n  const iconClasses = `${classes.FeedbackIcon} ${\n    correct ? classes.Correct : classes.Wrong\n  }`\n\n  return <div className={iconClasses}>{correct ? <Check /> : <Cross />}</div>\n}\n\nexport default FeedbackIcon\n","import React from 'react'\n\nimport { ChoiceModel } from '../../../data/questions'\nimport FeedbackAnswer from '../../Feedback/FeedbackAnswer/FeedbackAnswer'\nimport FeedbackIcon from '../../Feedback/FeedbackIcon/FeedbackIcon'\nimport classes from './QuestionInputRadioGroup.module.css'\n\ninterface QuestionInputRadioGroupProps {\n  choices: ChoiceModel[]\n  name: string\n  correctAnswer: string\n  userAnswer?: string\n  onChangeHandler: (value: string) => void\n}\n\nconst QuestionInputRadioGroup = ({\n  choices,\n  name,\n  correctAnswer,\n  userAnswer,\n  onChangeHandler,\n}: QuestionInputRadioGroupProps) => {\n  const answered = !!userAnswer\n  const correct = userAnswer === correctAnswer\n  const correctAnswerValue =\n    choices.find((choice) => choice.id === correctAnswer)?.value || ''\n\n  return (\n    <div>\n      {choices.map(({ id, value }) => (\n        <div key={id}>\n          <input\n            type=\"radio\"\n            id={id}\n            name={name}\n            value={id}\n            disabled={answered}\n            onChange={({\n              target: { value },\n            }: React.ChangeEvent<HTMLInputElement>) => onChangeHandler(value)}\n          />\n          <label\n            htmlFor={id}\n            className={`${\n              answered && id === userAnswer\n                ? correct\n                  ? classes.Correct\n                  : classes.Incorrect\n                : ''\n            }`}\n          >\n            {value}\n          </label>\n          {answered && id === userAnswer && <FeedbackIcon correct={correct} />}\n        </div>\n      ))}\n      {answered && !correct && (\n        <FeedbackAnswer correctAnswer={correctAnswerValue} />\n      )}\n    </div>\n  )\n}\n\nexport default QuestionInputRadioGroup\n","import React from 'react'\n\nimport { ChoiceModel } from '../../../data/questions'\nimport FeedbackAnswer from '../../Feedback/FeedbackAnswer/FeedbackAnswer'\nimport FeedbackIcon from '../../Feedback/FeedbackIcon/FeedbackIcon'\nimport classes from './QuestionInputSelect.module.css'\n\ninterface QuestionInputSelectProps {\n  choices: ChoiceModel[]\n  correctAnswer: string\n  userAnswer?: string\n  onChangeHandler: (value: string) => void\n}\n\nconst QuestionInputSelect = ({\n  choices,\n  correctAnswer,\n  userAnswer,\n  onChangeHandler,\n}: QuestionInputSelectProps) => {\n  const answered = !!userAnswer\n  const correct = userAnswer === correctAnswer\n  const correctAnswerValue =\n    choices.find((choice) => choice.id === correctAnswer)?.value || ''\n  const selectClasses = `${classes.Select} ${\n    answered ? (correct ? classes.Correct : classes.Incorrect) : ''\n  }`\n  const validationSection = (\n    <>\n      <FeedbackIcon correct={correct} />\n      {!correct && <FeedbackAnswer correctAnswer={correctAnswerValue} />}\n    </>\n  )\n\n  return (\n    <>\n      <select\n        className={selectClasses}\n        defaultValue={''}\n        disabled={answered}\n        onChange={({\n          target: { value },\n        }: React.ChangeEvent<HTMLSelectElement>) => onChangeHandler(value)}\n      >\n        <option value=\"\" disabled></option>\n        {choices.map(({ id, value }) => (\n          <option key={id} value={id}>\n            {value}\n          </option>\n        ))}\n      </select>\n      {answered && validationSection}\n    </>\n  )\n}\n\nexport default QuestionInputSelect\n","import React from 'react'\n\nimport FeedbackAnswer from '../../Feedback/FeedbackAnswer/FeedbackAnswer'\nimport FeedbackIcon from '../../Feedback/FeedbackIcon/FeedbackIcon'\nimport classes from './QuestionInputText.module.css'\n\ninterface QuestionInputTextProps {\n  correctAnswer: string\n  userAnswer?: string\n  onChangeHandler: (value: string) => void\n}\n\nconst QuestionInputText = ({\n  correctAnswer,\n  userAnswer,\n  onChangeHandler,\n}: QuestionInputTextProps) => {\n  const answered = !!userAnswer\n  const correct = userAnswer === correctAnswer\n  const inputClasses = `${classes.Input} ${\n    answered ? (correct ? classes.Correct : classes.Incorrect) : ''\n  }`\n  const validationSection = (\n    <>\n      <FeedbackIcon correct={correct} />\n      {!correct && <FeedbackAnswer correctAnswer={correctAnswer} />}\n    </>\n  )\n\n  return (\n    <>\n      <input\n        className={inputClasses}\n        type=\"text\"\n        disabled={answered}\n        onChange={({\n          target: { value },\n        }: React.ChangeEvent<HTMLInputElement>) => onChangeHandler(value)}\n      />\n      {answered && validationSection}\n    </>\n  )\n}\n\nexport default QuestionInputText\n","import React from 'react'\n\nimport classes from './Backdrop.module.css'\n\ninterface BackdropProps {\n  show: Boolean\n  onClickHandler: () => void\n}\n\nconst Backdrop = ({ show, onClickHandler }: BackdropProps) =>\n  show ? (\n    <div className={classes.Backdrop} onClick={onClickHandler}></div>\n  ) : null\n\nexport default Backdrop\n","import React from 'react'\n\nimport classes from './Modal.module.css'\nimport Backdrop from '../Backdrop/Backdrop'\n\ninterface ModalProps {\n  show: Boolean\n  children: React.ReactNode\n  onModalClose: () => void\n}\n\nconst Modal = ({ show, onModalClose, children }: ModalProps) => (\n  <>\n    <Backdrop show={show} onClickHandler={onModalClose} />\n    <div\n      className={classes.Modal}\n      style={{\n        transform: show ? 'translateY(0)' : 'translateY(-100vh)',\n        opacity: show ? '1' : '0',\n      }}\n    >\n      {children}\n    </div>\n  </>\n)\n\nexport default Modal\n","import React from 'react'\n\nimport { ThumbsUp, ThumbsDown } from '../../UI/Icons'\nimport classes from './WorthinessReport.module.css'\n\ninterface WorthinessReportProps {\n  score: Number\n  onClose: () => void\n}\n\nconst WorthinessReport = ({ score, onClose }: WorthinessReportProps) => {\n  const worthy = score > 50\n  const worthinessSection = worthy ? (\n    <>\n      <ThumbsUp size=\"100\" />\n      <h2>You’re Worthy! Humanity have a second chance</h2>\n    </>\n  ) : (\n    <>\n      <ThumbsDown size=\"100\" />\n      <h2>You’re Unworthy! Humanity is doomed!!!</h2>\n    </>\n  )\n\n  return (\n    <div className={classes.WorthinessReport}>\n      <h1>Results:</h1>\n      <div className={worthy ? classes.Worthy : classes.Unworthy}>\n        {worthinessSection}\n        <h3>{score}%</h3>\n      </div>\n      <button onClick={onClose}>Close</button>\n    </div>\n  )\n}\n\nexport default WorthinessReport\n","import React, { useState, useRef, useEffect } from 'react'\n\nimport { getQuizQuestions } from '../../Utils/Utils'\nimport { ChoiceModel, QuestionTypeModel } from '../../data/questions'\nimport Question from '../Question/Question'\nimport QuestionInputRadioGroup from '../QuestionInput/QuestionInputRadioGroup/QuestionInputRadioGroup'\nimport QuestionInputSelect from '../QuestionInput/QuestionInputSelect/QuestionInputSelect'\nimport QuestionInputText from '../QuestionInput/QuestionInputText/QuestionInputText'\nimport Modal from '../UI/Modal/Modal'\nimport classes from './Quiz.module.css'\nimport WorthinessReport from '../Feedback/WorthinessReport/WorthinessReport'\n\nconst Quiz = () => {\n  const [questions, setQuestions] = useState(() => getQuizQuestions())\n  const [activeQuestion, setActiveQuestion] = useState(1)\n  const [userAnswers, setUserAnswers] = useState<string[]>([])\n  const [answered, setAnswered] = useState(false)\n  const [showResult, setShowResult] = useState(false)\n  const inputValueRef = useRef('')\n  const scoreValueRef = useRef(0)\n  const attemptValueRef = useRef(0)\n  const questionsNumber = questions.length\n\n  useEffect(() => {\n    if (activeQuestion > questionsNumber) {\n      const correctAnswers = questions.reduce(\n        (acc, question, i) =>\n          question.correct === userAnswers[i] ? acc + 1 : acc,\n        0\n      )\n      scoreValueRef.current = (correctAnswers / questionsNumber) * 100\n      setShowResult(true)\n    }\n  }, [activeQuestion, questions, questionsNumber, userAnswers])\n\n  const restart = (): void => {\n    inputValueRef.current = ''\n    attemptValueRef.current = attemptValueRef.current + 1\n    setUserAnswers([])\n    setActiveQuestion(1)\n    setAnswered(false)\n    setShowResult(false)\n    setQuestions(getQuizQuestions())\n  }\n\n  const answerQuestion = (): void => {\n    saveUserQuestion(inputValueRef.current)\n    setActiveQuestion(activeQuestion + 1)\n    setAnswered(false)\n    inputValueRef.current = ''\n  }\n\n  const saveUserQuestion = (answer: string): void =>\n    setUserAnswers((prevAnswers) => [...prevAnswers, answer.toLowerCase()])\n\n  const handleInputChange = (value: string) => {\n    if (!answered) {\n      setAnswered(true)\n    }\n    inputValueRef.current = value\n  }\n\n  const hideResult = () => setShowResult(false)\n\n  const inputRadioGroup = (\n    id: string,\n    choices: ChoiceModel[] = [],\n    correct: string,\n    order: number\n  ) => (\n    <QuestionInputRadioGroup\n      choices={choices}\n      name={id}\n      correctAnswer={correct}\n      {...(userAnswers[order] ? { userAnswer: userAnswers[order] } : {})}\n      onChangeHandler={handleInputChange}\n    />\n  )\n  const inputSelect = (\n    choices: ChoiceModel[] = [],\n    correct: string,\n    order: number\n  ) => (\n    <QuestionInputSelect\n      choices={choices}\n      correctAnswer={correct}\n      {...(userAnswers[order] ? { userAnswer: userAnswers[order] } : {})}\n      onChangeHandler={handleInputChange}\n    />\n  )\n  const inputText = (correct: string, order: number) => (\n    <QuestionInputText\n      correctAnswer={correct}\n      {...(userAnswers[order] ? { userAnswer: userAnswers[order] } : {})}\n      onChangeHandler={handleInputChange}\n    />\n  )\n\n  const buttonSection =\n    activeQuestion <= questionsNumber ? (\n      <button onClick={answerQuestion} disabled={!answered}>\n        Answer\n      </button>\n    ) : (\n      <button onClick={restart}>Restart</button>\n    )\n\n  return (\n    <div className={classes.Quiz}>\n      <div className={classes.QuestionsContainer}>\n        {questions.slice(0, activeQuestion).map((question, i) => (\n          <div\n            key={question.id + attemptValueRef.current}\n            className={`${classes.QuestionContainer} ${\n              i + 1 === activeQuestion ? classes.ActiveQuestion : ''\n            }`}\n          >\n            <Question order={i + 1} text={question.text} />\n            <div className={classes.InputContainer}>\n              {\n                {\n                  [QuestionTypeModel.Radio]: inputRadioGroup(\n                    question.id,\n                    question.choices,\n                    question.correct,\n                    i\n                  ),\n                  [QuestionTypeModel.Select]: inputSelect(\n                    question.choices,\n                    question.correct,\n                    i\n                  ),\n                  [QuestionTypeModel.Text]: inputText(question.correct, i),\n                }[question.type]\n              }\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className={classes.Footer}>{buttonSection}</div>\n\n      <Modal show={showResult} onModalClose={hideResult}>\n        <WorthinessReport score={scoreValueRef.current} onClose={hideResult} />\n      </Modal>\n    </div>\n  )\n}\n\nexport default Quiz\n","export default __webpack_public_path__ + \"static/media/lom-logo.f848b8d4.svg\";","import React from 'react'\n\nimport lomLogo from '../../../assets/images/lom-logo.svg'\nimport classes from './Logo.module.css'\n\nconst Logo = () => (\n  <div className={classes.Logo}>\n    <img src={lomLogo} alt=\"LOM Logo\" />\n  </div>\n)\n\nexport default Logo\n","import React from 'react'\n\nimport classes from './App.module.css'\nimport Quiz from './components/Quiz/Quiz'\nimport Logo from './components/UI/Logo/Logo'\n\nfunction App() {\n  return (\n    <div className={classes.App}>\n      <header className={classes.Header}>\n        <Logo />\n        <h1>L.O.M Human’s Value Quiz</h1>\n      </header>\n      <Quiz />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}